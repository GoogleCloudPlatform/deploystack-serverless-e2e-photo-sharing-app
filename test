# I think it's a good idea to test your scripts. It's kinda awkward but you'll 
# be happy you did 


# DON'T REMOVE FROM test script.
CYAN='\033[0;36m'
BCYAN='\033[1;36m'
NC='\033[0m' # No Color
DIVIDER=$(printf %"$(tput cols)"s | tr " " "*")
DIVIDER+="\n"

function get_project_id() {
    local __resultvar=$1
    VALUE=$(gcloud config get-value project | xargs)
    eval $__resultvar="'$VALUE'"
}

function get_project_number() {
    local __resultvar=$1
    local PRO=$2
    VALUE=$(gcloud projects list --filter="project_id=$PRO" --format="value(PROJECT_NUMBER)" | xargs)
    eval $__resultvar="'$VALUE'"
}

# DISPLAY HELPERS
function section_open() {
    section_description=$1
    printf "$DIVIDER"
    printf "${CYAN}$section_description${NC} \n"
    printf "$DIVIDER"
}

function section_close() {
    printf "$DIVIDER"
    printf "${CYAN}$section_description ${BCYAN}- done${NC}\n"
    printf "\n\n"
}

function evalTest() {
    local command=$1
    local expected=$2

    local ERR=""
    got=$(eval $command 2>errFile)
    ERR=$(<errFile)

    if [ ${#ERR} -gt 0 ]; then
        if [ "$expected" = "EXPECTERROR" ]; then
            printf "Expected Error thrown \n"
            return
        fi

        printf "Halting - error: '$ERR'  \n"
        exit 1
    fi

    if [ "$got" != "$expected" ]; then
        printf "Halting: '$got' expected '$expected'  \n"
        exit 1
    fi

    printf "$expected is ok\n"
}

# END DON'T REMOVE FROM test script.

get_project_id PROJECT
get_project_number PROJECT_NUMBER $PROJECT
REGION=us-west1
ZONE=us-west1-a
BASENAME=serverless-social-media


gcloud config set project ${PROJECT}

terraform init
terraform apply  -var project="${PROJECT}"  -var region="${REGION}" -auto-approve

sql_server_name=$(terraform output -raw sql_database_name)
private_ip_name=$(terraform output -raw private_ip_name)
cloud_run_url=$(terraform output -raw cloud_run_url)

section_open "Test the IP Address exists"
    evalTest 'gcloud compute addresses describe $private_ip_name --global --format="value(name)"' $private_ip_name
section_close

section_open "Testing VPN"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-west1 --region us-west1 --format="value(name)"' "projects/$PROJECT/locations/us-west1/connectors/vpc-con-us-west1"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-central1 --region us-central1 --format="value(name)"' "projects/$PROJECT/locations/us-central1/connectors/vpc-con-us-central1"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-east1 --region us-east1  --format="value(name)"' "projects/$PROJECT/locations/us-east1/connectors/vpc-con-us-east1"
section_close

section_open "Test Service Account"
    evalTest 'gcloud iam service-accounts describe django@$PROJECT.iam.gserviceaccount.com --format="value(email)"' "django@$PROJECT.iam.gserviceaccount.com"
section_close

section_open "Test the Cloud Storage Bucket exists"
evalTest 'gsutil ls | grep $PROJECT-bucket '  "gs://$PROJECT-bucket/"
section_close

section_open "Test SQL Server"
    evalTest 'gcloud sql instances describe $sql_server_name --format="value(name)"' $sql_server_name
section_close

section_open "Testing Secrets"
    evalTest 'gcloud secrets describe django_settings --format="value(name)" | xargs' "projects/$PROJECT_NUMBER/secrets/django_settings"
    evalTest 'gcloud secrets describe DATABASE_PASSWORD --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/DATABASE_PASSWORD"
    evalTest 'gcloud secrets describe DATABASE_USER --format="value(name)" | xargs' "projects/$PROJECT_NUMBER/secrets/DATABASE_USER"
    evalTest 'gcloud secrets describe DATABASE_NAME --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/DATABASE_NAME"
    evalTest 'gcloud secrets describe DATABASE_HOST_PROD --format="value(name)" | xargs' "projects/$PROJECT_NUMBER/secrets/DATABASE_HOST_PROD"
    evalTest 'gcloud secrets describe DATABASE_PORT_PROD --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/DATABASE_PORT_PROD"
    evalTest 'gcloud secrets describe EXTERNAL_IP --format="value(name)" | xargs' "projects/$PROJECT_NUMBER/secrets/EXTERNAL_IP"
    evalTest 'gcloud secrets describe GS_BUCKET_NAME --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/GS_BUCKET_NAME"
    evalTest 'gcloud secrets describe PROJECT_ID --format="value(name)" | xargs' "projects/$PROJECT_NUMBER/secrets/PROJECT_ID"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_CENTRAL1 --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/WEBSITE_URL_US_CENTRAL1"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_WEST1 --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/WEBSITE_URL_US_WEST1"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_EAST1 --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/WEBSITE_URL_US_EAST1"
    evalTest 'gcloud secrets describe SUPERUSER_PASSWORD --format="value(name)"' "projects/$PROJECT_NUMBER/secrets/SUPERUSER_PASSWORD"
section_close

section_open "Test Cloud Run Services"
    evalTest 'gcloud run services describe $PROJECT --region=us-central1 --format="value(name)"' "$PROJECT"
    evalTest 'gcloud run services describe $PROJECT --region=us-west1 --format="value(name)"' "$PROJECT"
    evalTest 'gcloud run services describe $PROJECT --region=us-east1 --format="value(name)"' "$PROJECT"
section_close

section_open "Test Load Balancer parts exist"
    evalTest 'gcloud compute forwarding-rules describe  $PROJECT --global --format="value(name)"'  "$PROJECT"
    evalTest 'gcloud compute target-http-proxies describe $PROJECT-http-proxy  --global --format="value(name)"' "$PROJECT-http-proxy" 
    evalTest 'gcloud compute url-maps describe $PROJECT-url-map --global --format="value(name)"' "$PROJECT-url-map" 
    evalTest 'gcloud compute backend-services describe $PROJECT-backend-default --global --format="value(name)"'  "$PROJECT-backend-default"
section_close

section_open "Testing Endpoint is working"
    evalTest 'curl -s -o /dev/null -w "%{http_code}" $cloud_run_url' "302"
section_close

terraform destroy -var project="${PROJECT}" -var region="${REGION}" -auto-approve

section_open "Test Load Balancer parts dont exist"
    evalTest 'gcloud compute forwarding-rules describe  $PROJECT --global --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud compute target-http-proxies describe $PROJECT-http-proxy  --global --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud compute url-maps describe $PROJECT-url-map --global --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud compute backend-services describe $PROJECT-backend-default --global --format="value(name)"' "EXPECTERROR"
section_close

section_open "Test Cloud Run Services don't exists"
    evalTest 'gcloud run services describe $PROJECT --region=us-central1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud run services describe $PROJECT --region=us-west1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud run services describe $PROJECT --region=us-east1 --format="value(name)"' "EXPECTERROR"
section_close

section_open "Testing Secrets don't exist"
    evalTest 'gcloud secrets describe django_settings --format="value(name)" | xargs' "EXPECTERROR"
    evalTest 'gcloud secrets describe DATABASE_PASSWORD --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe DATABASE_USER --format="value(name)" | xargs' "EXPECTERROR"
    evalTest 'gcloud secrets describe DATABASE_NAME --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe DATABASE_HOST_PROD --format="value(name)" | xargs' "EXPECTERROR"
    evalTest 'gcloud secrets describe DATABASE_PORT_PROD --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe EXTERNAL_IP --format="value(name)" | xargs' "EXPECTERROR"
    evalTest 'gcloud secrets describe GS_BUCKET_NAME --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe PROJECT_ID --format="value(name)" | xargs' "EXPECTERROR"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_CENTRAL1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_WEST1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe WEBSITE_URL_US_EAST1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud secrets describe SUPERUSER_PASSWORD --format="value(name)"' "EXPECTERROR"
section_close

section_open "Test SQL Server doesn't exist"
    evalTest 'gcloud sql instances describe $sql_server_name --format="value(name)"' "EXPECTERROR"
section_close

section_open "Test the Cloud Storage Bucket doesn't exist"
    evalTest 'gsutil ls | grep $PROJECT-bucket '  ""
section_close

section_open "Test Service Account doesn't exist"
    evalTest 'gcloud iam service-accounts describe django@$PROJECT.iam.gserviceaccount.com --format="value(email)"' "EXPECTERROR"
section_close

section_open "Testing VPN doesn't exist"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-west1 --region us-west1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-central1 --region us-central1 --format="value(name)"' "EXPECTERROR"
    evalTest 'gcloud compute networks vpc-access connectors describe vpc-con-us-east1 --region us-east1  --format="value(name)"' "EXPECTERROR"
section_close

section_open "Test the IP Address exists doesn't exist"
    evalTest 'gcloud compute addresses describe $private_ip_name --global --format="value(name)"' "EXPECTERROR"
section_close

printf "$DIVIDER"
printf "CONGRATS!!!!!!! \n"
printf "You got the end the of your test with everything working. \n"
printf "$DIVIDER"